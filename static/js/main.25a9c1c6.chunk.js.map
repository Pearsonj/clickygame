{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["FriendCard","props","console","log","react_default","a","createElement","className","alt","type","name","src","image","onClick","handleIncrement","id","Wrapper","children","App","state","friends","score","highScore","shuffleFriends","i","length","j","Math","floor","random","_ref","_this","setState","index","click","forEach","friend","_this2","this","components_Wrapper","map","components_FriendCard","key","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"0kFAeeA,MAZf,SAAoBC,GAGlB,OADAC,QAAQC,IAAIF,GAEVG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKP,EAAMQ,KAAKC,KAAMC,IAAKV,EAAMQ,KAAKG,MAAOL,UAAU,MAAMM,QAAU,kBAAMZ,EAAMa,gBAAgBb,EAAMQ,KAAKM,gBCF5GC,MAJf,SAAiBf,GACf,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWN,EAAMgB,kBCEpBC,oNAEnBC,MAAQ,CACNC,QAASA,EACTC,MAAO,EACPC,UAAW,KAIbC,eAAiB,SAACH,GAChB,IAAK,IAAII,EAAIJ,EAAQK,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC3C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAEhB,CAACV,EAAQM,GAAIN,EAAQI,IAA/CJ,EAAQI,GAFkCM,EAAA,GAE9BV,EAAQM,GAFsBI,EAAA,GAI/CC,EAAKC,SAAS,CAACZ,QAASA,OAGxBN,gBAAkB,SAACC,GAGjB,IAFA,IACIkB,EADAb,EAAUW,EAAKZ,MAAMC,QAEjBI,EAAI,EAAGA,EAAIJ,EAAQK,OAAQD,IAC9BJ,EAAQI,GAAGT,KAAOA,IACnBkB,EAAQT,GAGTJ,EAAQa,GAAOC,OAChBH,EAAKC,SAAS,CAAEX,MAAO,IACvBD,EAAQe,QAAQ,SAACC,GACfA,EAAOF,OAAQ,MAGdH,EAAKZ,MAAME,OAASU,EAAKZ,MAAMG,WAChCS,EAAKC,SAAS,CAAEX,MAAOU,EAAKZ,MAAME,MAAQ,IAC1CU,EAAKC,SAAS,CAAEV,UAAWS,EAAKZ,MAAMG,UAAY,KAEhDS,EAAKC,SAAS,CAACX,MAAOU,EAAKZ,MAAME,MAAQ,IAE/CD,EAAQa,GAAOC,OAAQ,GAGvBH,EAAKR,eAAeH,4EAGd,IAAAiB,EAAAC,KACP,OACElC,EAAAC,EAAAC,cAACiC,EAAD,KACOnC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,eAAsC+B,KAAKnB,MAAME,OACjDjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,eAAsC+B,KAAKnB,MAAMG,cAK9CgB,KAAKnB,MAAMC,QAAQoB,IAAI,SAAAJ,GACtB,OACEhC,EAAAC,EAAAC,cAACmC,EAAD,CAAYC,IAAKN,EAAOrB,GAAIN,KAAM2B,EAAQtB,gBAAiBuB,EAAKvB,4BA3D/C6B,oBCDjCC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.25a9c1c6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) \n{\n  console.log(props);\n  return (\n    <div className=\"Image\">\n      <div className=\"img-container\" >\n        <img alt={props.type.name} src={props.type.image} className=\"img\" onClick= {() => props.handleIncrement(props.type.id)} ></img>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, {Component} from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n\n  state = {\n    friends: friends,\n    score: 0,\n    highScore: 0\n  };\n\n  // handleIncrement increments this.state.count by 1\n  shuffleFriends = (friends) => {\n    for (let i = friends.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [friends[i], friends[j]] = [friends[j], friends[i]];\n  }\n  this.setState({friends: friends});\n  }\n\n  handleIncrement = (id) => {\n    let friends = this.state.friends;\n    let index;\n    for(let i = 0; i < friends.length; i++) {\n      if(friends[i].id === id) {\n        index = i; \n      }\n    } \n    if(friends[index].click){\n      this.setState({ score: 0});\n      friends.forEach((friend) => {\n        friend.click = false;\n      })\n    }else{\n      if(this.state.score >= this.state.highScore){\n        this.setState({ score: this.state.score + 1 });\n        this.setState({ highScore: this.state.highScore + 1});\n        }else{\n          this.setState({score: this.state.score + 1});\n        }\n    friends[index].click = true;\n    }\n\n    this.shuffleFriends(friends);\n  };\n\n render() {\n   return (\n     <Wrapper>\n            <h1 className=\"title\">Clicky Game\n            <div className=\"card text-center\">\n        <div className=\"card-header bg-primary text-white\">\n        </div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">Your Score: {this.state.score}</p>\n          <p className=\"card-text\">High Score: {this.state.highScore}</p>\n        </div>\n      </div>\n      </h1>\n      \n            {this.state.friends.map(friend => {\n              return(\n                <FriendCard key={friend.id} type={friend} handleIncrement={this.handleIncrement} />\n              )\n            })}\n          </Wrapper>\n        );\n  };\n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}